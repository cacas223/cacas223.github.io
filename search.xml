<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>es6第二版</title>
      <link href="/2023/01/01/es6%E7%AC%AC%E4%BA%8C%E7%89%88/"/>
      <url>/2023/01/01/es6%E7%AC%AC%E4%BA%8C%E7%89%88/</url>
      
        <content type="html"><![CDATA[<hr><h3 id="let变量声明以及声明特性"><a href="#let变量声明以及声明特性" class="headerlink" title="let变量声明以及声明特性"></a>let变量声明以及声明特性</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1、变量不能重复声明</span></span><br><span class="line"><span class="keyword">let</span> star=<span class="string">&quot;123&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> star=<span class="string">&quot;345&quot;</span>;<span class="comment">//由于变量已经存在，则再声明的话会报错</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//2、块级作用域</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">let</span> let_test=<span class="number">123</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(let_test);<span class="comment">//因为let是块级作用域，所以或报错</span></span><br><span class="line"><span class="comment">/*-----------------------------------------------------*/</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> var_test=<span class="number">123</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(var_test);<span class="comment">//var是函数作用域，所以在整个函数内都是有效的</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//3、声明变量不会提升到代码块顶部，即不存在变量提升</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(song);</span><br><span class="line"><span class="keyword">var</span> song=<span class="string">&quot;恋爱达人&quot;</span>;<span class="comment">//输出undefined  但如果是 let song=&quot;恋爱达人&quot;；则会报错</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//4、不影响作用域链</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">let</span> school=<span class="string">&quot;望子成龙小学&quot;</span>；</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>)&#123;</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(school);<span class="comment">//会先在该作用域下寻找变量school,若没有找到，则到它的上层作用域寻找</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">fn</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="变量的解构赋值"><a href="#变量的解构赋值" class="headerlink" title="变量的解构赋值"></a>变量的<a href="https://so.csdn.net/so/search?q=%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC&amp;spm=1001.2101.3001.7020">解构赋值</a></h3><p>ES6允许按照一定模式从数组和对象中提取值，对变量进行赋值，这被称为解构赋值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">       <span class="comment">// 数组解构</span></span><br><span class="line">       <span class="keyword">const</span> <span class="variable constant_">F4</span>=[<span class="string">&#x27;小沈阳&#x27;</span>,<span class="string">&#x27;刘能&#x27;</span>];</span><br><span class="line">       <span class="keyword">let</span> [xiao,liu]=<span class="variable constant_">F4</span>;</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(xiao);</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(liu);</span><br><span class="line"></span><br><span class="line">       <span class="comment">// 对象解构</span></span><br><span class="line">       <span class="keyword">const</span> zhao=&#123;</span><br><span class="line">           <span class="attr">name</span>:<span class="string">&#x27;赵本山&#x27;</span>,</span><br><span class="line">           <span class="attr">age</span>:<span class="string">&#x27;不详&#x27;</span>,</span><br><span class="line">           <span class="attr">xiaopin</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">               <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;我可以演小品&quot;</span>);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;;</span><br><span class="line">       <span class="keyword">let</span> &#123;name,age,xiaopin&#125;=zhao;</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(name);</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(age);</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(xiaopin);</span><br><span class="line"></span><br><span class="line">       <span class="comment">// 平常的读取方法是这样的，可见简化了重复的对象名</span></span><br><span class="line">       <span class="comment">// zhao.name;zhao.age;zhao.xiaopin</span></span><br><span class="line">   &lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="模板字符串"><a href="#模板字符串" class="headerlink" title="模板字符串"></a>模板字符串</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 1、声明</span></span><br><span class="line">     <span class="keyword">let</span> str=<span class="string">`我是一个字符串！`</span>;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(str);</span><br><span class="line">    <span class="comment">// 2、内容中可以直接出现换行符</span></span><br><span class="line">    <span class="keyword">let</span> str_s=<span class="string">`&lt;ul&gt;</span></span><br><span class="line"><span class="string">        &lt;li&gt;沈腾&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li&gt;马丽&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li&gt;魏翔&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;/ul&gt;`</span>;</span><br><span class="line">    <span class="comment">// 3、变量拼接</span></span><br><span class="line">        <span class="keyword">let</span> lovest=<span class="string">&#x27;魏翔&#x27;</span>;</span><br><span class="line">        <span class="keyword">let</span> out=<span class="string">`<span class="subst">$&#123;lovest&#125;</span>是我心目中最搞笑的演员`</span>;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(out);</span><br><span class="line">&lt;/script&gt;   </span><br></pre></td></tr></table></figure><h3 id="对象的简化写法"><a href="#对象的简化写法" class="headerlink" title="对象的简化写法"></a>对象的简化写法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">           <span class="comment">// ES6允许在大括号里面，直接写入变量和函数，作为对象的属性和方法</span></span><br><span class="line">           <span class="comment">// 这样的书写更加简洁</span></span><br><span class="line">           <span class="keyword">let</span> name=<span class="string">&#x27;望子成龙小学&#x27;</span>;</span><br><span class="line">           <span class="keyword">let</span> change=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">               <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;我们可以改变你！&quot;</span>)</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">const</span> school=&#123;</span><br><span class="line">               name,</span><br><span class="line">               change,</span><br><span class="line">               <span class="title function_">improve</span>(<span class="params"></span>)&#123;</span><br><span class="line">                   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;我们可以提高你的技能！&quot;</span>);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;;</span><br><span class="line">          school.<span class="title function_">change</span>();</span><br><span class="line">       &lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="箭头函数以及声明特点"><a href="#箭头函数以及声明特点" class="headerlink" title="箭头函数以及声明特点"></a>箭头函数以及声明特点</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//声明函数</span></span><br><span class="line">            <span class="keyword">let</span> fn=<span class="keyword">function</span>(<span class="params">a,b</span>)&#123;</span><br><span class="line">             <span class="keyword">return</span> a+b;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//箭头函数</span></span><br><span class="line">            <span class="keyword">let</span> <span class="title function_">fn_row</span>=(<span class="params">a,b</span>)=&gt;&#123;</span><br><span class="line">            <span class="keyword">return</span> a+b;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 调用函数</span></span><br><span class="line">            <span class="keyword">let</span> result=<span class="title function_">fn_row</span>(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// 2、不能作为构造实例化对象</span></span><br><span class="line">            <span class="keyword">let</span> <span class="title function_">Person</span>=(<span class="params">name,age</span>)=&gt;&#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">name</span>=name;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">age</span>=age;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3、不能使用arguments变量</span></span><br><span class="line">            <span class="keyword">let</span> <span class="title function_">fn_a</span>=(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">arguments</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="title function_">fn_a</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 4、(1)省略小括号：当形参有且只有一个的时候</span></span><br><span class="line">            <span class="keyword">let</span> <span class="title function_">add</span>=n=&gt;&#123;</span><br><span class="line">                <span class="keyword">return</span> n+n;</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">add</span>(<span class="number">9</span>));</span><br><span class="line"> </span><br><span class="line">   <span class="comment">// (2)省略花括号，当代码体只有一条语句的时候,此时return必须省略</span></span><br><span class="line">            <span class="keyword">let</span> <span class="title function_">pow</span>=n=&gt; n*n;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">pow</span>(<span class="number">9</span>));</span><br></pre></td></tr></table></figure><h3 id="箭头函数的实践及应用"><a href="#箭头函数的实践及应用" class="headerlink" title="箭头函数的实践及应用"></a>箭头函数的实践及应用</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>箭头函数实战<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">            <span class="selector-tag">div</span>&#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">                <span class="attribute">width</span>: <span class="number">200px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">                <span class="attribute">height</span>: <span class="number">200px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">                <span class="attribute">background</span>: <span class="number">#58a</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">            &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;ad&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">let</span> ad=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;ad&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            ad.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// // 保存this的值</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// let _this=this;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// // 定时器</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// setTimeout(function()&#123;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">//     _this.style.background=&#x27;pink&#x27;;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// &#125;,2000)</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">background</span>=<span class="string">&#x27;pink&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;,<span class="number">2000</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">//    需求2</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> arr=[<span class="number">1</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">100</span>,<span class="number">25</span>];</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> result=arr.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span>=&gt;</span>item%<span class="number">2</span>===<span class="number">0</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 箭头函数适合与this无关的回调，定时器，数组的方法回调</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">//箭头函数不适合与this有关的回调，事件回调，对象的方法</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> <span class="title class_">Person</span>=&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">name</span>:<span class="string">&#x27;尚硅谷&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">getName</span>:<span class="function">()=&gt;</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">name</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;<span class="comment">//这种即调用不了对象本身的name属性</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">       </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="ES6-允许给函数参数赋值初始值"><a href="#ES6-允许给函数参数赋值初始值" class="headerlink" title="ES6 允许给函数参数赋值初始值"></a>ES6 允许给函数参数赋值初始值</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 1.形参初始值，具有默认值的参数，一般位置要靠后（潜规则）</span></span><br><span class="line">         <span class="keyword">function</span> <span class="title function_">add</span>(<span class="params">a,b,c=<span class="number">10</span></span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> a+b+c;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">let</span> result=<span class="title function_">add</span>(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">         <span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br><span class="line">   <span class="comment">//  2、与解构赋值结合</span></span><br><span class="line">        <span class="comment">//正常</span></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">connect</span>(<span class="params">options</span>)&#123;</span><br><span class="line">          host=options.<span class="property">host</span>;</span><br><span class="line">          age=options.<span class="property">age</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 简化后</span></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">connect</span>(<span class="params">&#123;host,age&#125;</span>)&#123;</span><br><span class="line">            host=host;</span><br><span class="line">            age=age;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 调用函数</span></span><br><span class="line">        <span class="title function_">connect</span>(&#123;</span><br><span class="line">        <span class="attr">host</span>:<span class="string">&#x27;atguigu&#x27;</span>,</span><br><span class="line">        <span class="attr">age</span>:<span class="number">12</span></span><br><span class="line">        &#125;)</span><br><span class="line">       &lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="rest参数"><a href="#rest参数" class="headerlink" title="rest参数"></a>rest参数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">       <span class="comment">//    rest参数</span></span><br><span class="line">       <span class="keyword">function</span> <span class="title function_">date</span>(<span class="params">...args</span>)&#123;</span><br><span class="line">           <span class="variable language_">console</span>.<span class="title function_">log</span>(args);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="title function_">date</span>(<span class="string">&#x27;阿衰&#x27;</span>,<span class="string">&#x27;庄酷&#x27;</span>);</span><br><span class="line">       <span class="comment">// rest参数必须要放到参数最后</span></span><br><span class="line">       <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">a,b,...args</span>)&#123;</span><br><span class="line">           <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line">           <span class="variable language_">console</span>.<span class="title function_">log</span>(b);</span><br><span class="line">           <span class="variable language_">console</span>.<span class="title function_">log</span>(args);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="title function_">fn</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>);</span><br><span class="line">      &lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="拓展运算符"><a href="#拓展运算符" class="headerlink" title="拓展运算符"></a>拓展运算符</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>拓展运算符<span class="tag">&lt;/<span class="name">title</span>&gt;</span>    </span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// [...]拓展运算符能将【数组】转换为逗号分隔的【参数序列】</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// 声明一个数组...</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">const</span> tfboys=[<span class="string">&#x27;王源&#x27;</span>,<span class="string">&quot;王俊凯&quot;</span>,<span class="string">&quot;易烊千玺&quot;</span>];</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">function</span> <span class="title function_">chunwan</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">arguments</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="title function_">chunwan</span>(tfboys);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="title function_">chunwan</span>(...tfboys);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// 拓展运算符的应用</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// 1、数组的合并</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">const</span> kuaizi=[<span class="string">&#x27;王太利&#x27;</span>,<span class="string">&#x27;肖央&#x27;</span>];</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">const</span> fenghuang=[<span class="string">&#x27;曾毅&#x27;</span>,<span class="string">&#x27;玲花&#x27;</span>];</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">const</span> zuixuanxiaopingguo=[...kuaizi,...fenghuang];</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(zuixuanxiaopingguo);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// 2、数组的克隆</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">const</span> sanzhihua=[<span class="string">&#x27;E&#x27;</span>,<span class="string">&#x27;G&#x27;</span>,<span class="string">&#x27;M&#x27;</span>];</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">const</span> sanyecao=[...sanzhihua];</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(sanyecao);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// 3、将伪数组转换为真正的数组</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">const</span> divs=<span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;div&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">const</span> divArr=[...divs];</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(divArr);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">       </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="Symbol介绍与创建"><a href="#Symbol介绍与创建" class="headerlink" title="Symbol介绍与创建"></a>Symbol介绍与创建</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">       <span class="comment">// 创建Symbol</span></span><br><span class="line">       <span class="keyword">let</span> s=<span class="title class_">Symbol</span>();</span><br><span class="line">       <span class="comment">// console.log(s,typeof s);</span></span><br><span class="line">     </span><br><span class="line">       <span class="keyword">let</span> s2=<span class="title class_">Symbol</span>(<span class="string">&#x27;kaven&#x27;</span>);     <span class="comment">//Symbol()返回的值都是唯一的</span></span><br><span class="line">       <span class="keyword">let</span> s3=<span class="title class_">Symbol</span>(<span class="string">&#x27;kaven&#x27;</span>);</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(s2==s3);        <span class="comment">// false s2和s3不相同</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">// Symbol.for创建</span></span><br><span class="line">       <span class="keyword">let</span> s4=<span class="title class_">Symbol</span>.<span class="title function_">for</span>(<span class="string">&#x27;kaven&#x27;</span>); <span class="comment">//Symbol.for(key) 通过key来查找Symbol，找到的话，则返回 </span></span><br><span class="line">                                                  <span class="comment">// Symbol，否则创建一个新的Symbol</span></span><br><span class="line">       <span class="keyword">let</span> s5=<span class="title class_">Symbol</span>.<span class="title function_">for</span>(<span class="string">&#x27;kaven&#x27;</span>);</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(s4==s5);        <span class="comment">//true s4和s5相同</span></span><br><span class="line">    </span><br><span class="line">       &lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="comment">// 不能与其他数据进行运算</span></span><br><span class="line"><span class="keyword">let</span> result=s+s;</span><br><span class="line"><span class="comment">//七大类型 USONB you are so niubility</span></span><br><span class="line"><span class="comment">//u underfined</span></span><br><span class="line"><span class="comment">//s symbol string</span></span><br><span class="line"><span class="comment">//o object</span></span><br><span class="line"><span class="comment">//n null number</span></span><br><span class="line"><span class="comment">//b boolean</span></span><br></pre></td></tr></table></figure><h3 id="Symbol的内置属性"><a href="#Symbol的内置属性" class="headerlink" title="Symbol的内置属性"></a>Symbol的内置属性</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">         <span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">            <span class="keyword">static</span>[<span class="title class_">Symbol</span>.<span class="property">hasInstance</span>](param)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">let</span> o=&#123;&#125;;</span><br><span class="line">         <span class="variable language_">console</span>.<span class="title function_">log</span>(o <span class="keyword">instanceof</span> <span class="title class_">Person</span>);<span class="comment">//true</span></span><br><span class="line">        <span class="comment">//  特定场景下 改变对象的属性 来改变对象的表现</span></span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> xiyou = [<span class="string">&quot;唐僧&quot;</span>, <span class="string">&quot;孙悟空&quot;</span>, <span class="string">&quot;猪八戒&quot;</span>, <span class="string">&quot;沙僧&quot;</span>];</span><br><span class="line">   </span><br><span class="line"> <span class="comment">// 使用for of来遍历数组</span></span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">let</span> v <span class="keyword">of</span> xiyou) &#123;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(v);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//迭代器方法</span></span><br><span class="line"><span class="comment">//(1)创建一个指针对象，指向当前数据结构的起始位置</span></span><br><span class="line">     <span class="keyword">let</span> iterator=xiyou[<span class="title class_">Symbol</span>.<span class="property">iterator</span>]();</span><br><span class="line"> </span><br><span class="line"><span class="comment">//(2)调用对象的next的方法</span></span><br><span class="line">   <span class="comment">// 第一次调用对象的next方法，指针自动指向数据结构的第一个成员</span></span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(iterator.<span class="title function_">next</span>());</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(iterator.<span class="title function_">next</span>());</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(iterator.<span class="title function_">next</span>());</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(iterator.<span class="title function_">next</span>());</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(iterator.<span class="title function_">next</span>());</span><br><span class="line">   &lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="生成器"><a href="#生成器" class="headerlink" title="生成器"></a>生成器</h3><p>生成器是ES6中新增的一种函数控制、使用的方案，它可以让我们更加灵活的控制函数什么时候继续执行、暂停执行等。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      <span class="comment">// 生成器其实就是一个特殊的函数</span></span><br><span class="line">      <span class="comment">// yield相当于函数代码的分隔符</span></span><br><span class="line">      <span class="keyword">function</span>* <span class="title function_">gen</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">//第一部分</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        <span class="keyword">yield</span> <span class="string">&quot;a&quot;</span>;</span><br><span class="line">        <span class="comment">//第二部分</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;world&quot;</span>);</span><br><span class="line">        <span class="keyword">const</span> number=<span class="keyword">yield</span> <span class="string">&quot;b&quot;</span>;</span><br><span class="line">        <span class="comment">//第三部分</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;111&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(number);</span><br><span class="line">        <span class="keyword">yield</span> <span class="string">&quot;c&quot;</span>;</span><br><span class="line">        <span class="comment">//第四部分</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;222&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="keyword">let</span> generator=<span class="title function_">gen</span>();<span class="comment">//生成器函数返回值是一个生成器</span></span><br><span class="line">       generator.<span class="title function_">next</span>();<span class="comment">//会执行代码直到遇到yield才停止,经历了console.log(&quot;hello&quot;);所以会输出&quot;hello&quot;</span></span><br><span class="line">       <span class="comment">//console.log( generator.next());返回值是&#123; value: &#x27;a&#x27;, done: false &#125; </span></span><br><span class="line">       generator.<span class="title function_">next</span>();<span class="comment">//经历了console.log(&quot;world&quot;);所以会输出&quot;world&quot;</span></span><br><span class="line"> </span><br><span class="line">      <span class="comment">//我们在调用next函数的时候，可以给它传递参数，那么这个参数会作为上一个yield语句的返回值</span></span><br><span class="line">       generator.<span class="title function_">next</span>(<span class="number">123</span>);<span class="comment">//经历了console.log(&quot;111&quot;);和console.log(number);  所以会输出&quot;111&quot;和123</span></span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="生成器函数参数"><a href="#生成器函数参数" class="headerlink" title="生成器函数参数"></a>生成器函数参数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      <span class="keyword">function</span>* <span class="title function_">gen</span>(<span class="params">arg</span>) &#123;</span><br><span class="line">        <span class="comment">// 一</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(arg);</span><br><span class="line">        <span class="keyword">let</span> one = <span class="keyword">yield</span> <span class="number">111</span>;</span><br><span class="line">        <span class="comment">// 二</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;one:&quot;</span> + one);</span><br><span class="line">        <span class="keyword">yield</span> <span class="number">222</span>;</span><br><span class="line">        <span class="comment">// 三</span></span><br><span class="line">        <span class="keyword">yield</span> <span class="number">333</span>;</span><br><span class="line">        <span class="comment">// 四</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">let</span> iterator = <span class="title function_">gen</span>(<span class="string">&quot;AAA&quot;</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(iterator.<span class="title function_">next</span>());</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(iterator.<span class="title function_">next</span>(<span class="string">&quot;BBB&quot;</span>));</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="生成器函数实例"><a href="#生成器函数实例" class="headerlink" title="生成器函数实例"></a>生成器函数实例</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 异步操作 文件操作、网络操作(ajax,request)、数据库操作</span></span><br><span class="line">    <span class="comment">// 1s 后控制台输出 111 2s后控制台输出222 3s后输出333</span></span><br><span class="line">    <span class="comment">// 回调地狱</span></span><br><span class="line">    <span class="comment">// setTimeout(()=&gt;&#123;</span></span><br><span class="line">    <span class="comment">// console.log(111);</span></span><br><span class="line">    <span class="comment">// setTimeout(()=&gt;&#123;</span></span><br><span class="line">    <span class="comment">// console.log(222);</span></span><br><span class="line">    <span class="comment">// &#125;,2000);</span></span><br><span class="line">    <span class="comment">// &#125;,1000);</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">one</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">111</span>);</span><br><span class="line">            iterator.<span class="title function_">next</span>();</span><br><span class="line">        &#125;,<span class="number">1000</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">two</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">222</span>);</span><br><span class="line">            iterator.<span class="title function_">next</span>();</span><br><span class="line">        &#125;,<span class="number">2000</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">three</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">333</span>);</span><br><span class="line">            iterator.<span class="title function_">next</span>();</span><br><span class="line">        &#125;,<span class="number">3000</span>)</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">function</span> *<span class="title function_">gen</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;before&quot;</span>);</span><br><span class="line">        <span class="keyword">yield</span> <span class="title function_">one</span>();</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;beforeTwo&quot;</span>);</span><br><span class="line">        <span class="keyword">yield</span> <span class="title function_">two</span>();</span><br><span class="line">        <span class="keyword">yield</span> <span class="title function_">three</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> iterator=<span class="title function_">gen</span>();</span><br><span class="line">    iterator.<span class="title function_">next</span>();</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 模拟获取 用户数据  订单数据  商品数据</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">getUsers</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">let</span> data=<span class="string">&quot;用户数据&quot;</span>;</span><br><span class="line">            iterator.<span class="title function_">next</span>(data);</span><br><span class="line">        &#125;,<span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">getOrders</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">let</span> data=<span class="string">&quot;订单数据&quot;</span>;</span><br><span class="line">            iterator.<span class="title function_">next</span>(data);</span><br><span class="line">        &#125;,<span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">getGoods</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">let</span> data=<span class="string">&quot;商品数据&quot;</span>;</span><br><span class="line">            iterator.<span class="title function_">next</span>(data);</span><br><span class="line">        &#125;,<span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span>*<span class="title function_">gen</span>(<span class="params"></span>)&#123;</span><br><span class="line">       <span class="keyword">let</span> users=<span class="keyword">yield</span> <span class="title function_">getUsers</span>();</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(users);</span><br><span class="line">       <span class="keyword">let</span> orders=<span class="keyword">yield</span> <span class="title function_">getOrders</span>();</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(orders);</span><br><span class="line">       <span class="keyword">let</span> goods=<span class="keyword">yield</span> <span class="title function_">getGoods</span>();</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(goods);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> iterator=<span class="title function_">gen</span>();</span><br><span class="line">    iterator.<span class="title function_">next</span>();</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure><p>15.Promise介绍与基本使用</p><p>Promise是ES6引入的异步编程的新解决方案。语法上Promise是一个构造函数，用来封装异步操作并可以获取其成功或失败的结果。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      <span class="comment">// 实例化Promise对象</span></span><br><span class="line">      <span class="comment">// resolve ：异步操作执行成功后的回调函数</span></span><br><span class="line">      <span class="comment">// reject：异步操作执行失败后的回调函数</span></span><br><span class="line">      <span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span> (<span class="params">resolve, reject</span>) &#123;</span><br><span class="line">        <span class="comment">//做一些异步操作</span></span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;执行成功!&quot;</span>);</span><br><span class="line">          <span class="title function_">resolve</span>(<span class="string">&quot;我是成功！！&quot;</span>);</span><br><span class="line">        &#125;, <span class="number">1000</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">  </span><br><span class="line">      <span class="comment">//  .then() 方法需要两个参数，第一个参数作为处理已兑现状态的回调函数，而第二个参数则作为处理已拒绝状态的回调函数。</span></span><br><span class="line">      p.<span class="title function_">then</span>(</span><br><span class="line">        <span class="keyword">function</span> (<span class="params">value</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(value);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="keyword">function</span> (<span class="params">reason</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(reason);</span><br><span class="line">        &#125;</span><br><span class="line">      );</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="Promise封装读取文件"><a href="#Promise封装读取文件" class="headerlink" title="Promise封装读取文件"></a>Promise封装读取文件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1、引入fs模块</span></span><br><span class="line"><span class="keyword">const</span> fs=<span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="comment">// // 2、调用方法读取文件</span></span><br><span class="line"><span class="comment">// fs.readFile(&#x27;./resource/为学.md&#x27;,(err,data)=&gt;&#123;</span></span><br><span class="line"><span class="comment">//     // 如果失败，则抛出错误</span></span><br><span class="line"><span class="comment">//     if(err) throw err;</span></span><br><span class="line"><span class="comment">//     // 如果没有出错，则输出内容</span></span><br><span class="line"><span class="comment">//     console.log(data.toString());</span></span><br><span class="line"><span class="comment">// &#125;);</span></span><br><span class="line">    <span class="comment">// 使用Promise封装</span></span><br><span class="line">    <span class="keyword">const</span> p=<span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span>(<span class="params">resolve,reject</span>)&#123;</span><br><span class="line">        fs.<span class="title function_">readFile</span>(<span class="string">&#x27;./resource/为学.md&#x27;</span>,<span class="function">(<span class="params">err,data</span>)=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(err)<span class="title function_">reject</span>(err);</span><br><span class="line">            <span class="title function_">resolve</span>(data);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    p.<span class="title function_">then</span>(<span class="keyword">function</span>(<span class="params">value</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(value.<span class="title function_">toString</span>());</span><br><span class="line">    &#125;,<span class="keyword">function</span>(<span class="params">reason</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reason);</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><h3 id="Promise封装Ajax请求"><a href="#Promise封装Ajax请求" class="headerlink" title="Promise封装Ajax请求"></a>Promise封装Ajax请求</h3><p>   Ajax:Asynchronous JavaScript + XML（异步 JavaScript 和 XML）, 其本身不是一种新技术，而是一个在 2005 年被 Jesse James Garrett 提出的新术语，用来描述一种使用现有技术集合的‘新’方法，包括：HTML ,CSS, JavaScript, DOM, XML(en-US), XSLT, 以及最重要的 XMLHttpRequest。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">        &lt;title&gt;发送Ajax请求&lt;/title&gt;    </span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;script&gt;</span><br><span class="line">            const p=new Promise((resolve,reject)=&gt;&#123;</span><br><span class="line">            // 1、创建对象</span><br><span class="line">            const xhr=new XMLHttpRequest();</span><br><span class="line">            // 2、初始化</span><br><span class="line">            xhr.open(&quot;GET&quot;,&quot;https://api.apiopen.top/api/sentences&quot;);</span><br><span class="line">            // 3.发送</span><br><span class="line">            xhr.send();</span><br><span class="line">            // 4、绑定事件，处理响应结果</span><br><span class="line">            xhr.onreadystatechange=function()&#123;</span><br><span class="line">                if(xhr.readyState===4)&#123;</span><br><span class="line">                    if(xhr.status&gt;=200 &amp;&amp;xhr.status&lt;300)&#123;</span><br><span class="line">                        resolve(xhr.response);</span><br><span class="line">                    &#125;else&#123;</span><br><span class="line">                        reject(xhr.status);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        p.then(function(value)&#123;</span><br><span class="line">        console.log(value);</span><br><span class="line">        var body=document.querySelector(&#x27;body&#x27;);</span><br><span class="line">        body.innerHTML=value</span><br><span class="line">        &#125;,function(reason)&#123;</span><br><span class="line">        console.error(reason);</span><br><span class="line">        &#125;)</span><br><span class="line">       &lt;/script&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="Promise-prototype-then方法"><a href="#Promise-prototype-then方法" class="headerlink" title="Promise.prototype.then方法"></a>Promise.prototype.then方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>rest参数<span class="tag">&lt;/<span class="name">title</span>&gt;</span>    </span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 调用then方法 then方法的返回结果是Promise对象，对象状态由回调函数的执行结果决定</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 链式调用</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        p.<span class="title function_">then</span>(<span class="function"><span class="params">value</span>=&gt;</span>&#123;&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">value</span>=&gt;</span>&#123;&#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">       </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="Promise实践练习"><a href="#Promise实践练习" class="headerlink" title="Promise实践练习"></a>Promise实践练习</h3><p>  读取多个文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs=<span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> p=<span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span>(<span class="params">resolve,reject</span>)&#123;</span><br><span class="line">    fs.<span class="title function_">readFile</span>(<span class="string">&#x27;./resource/为学.md&#x27;</span>,<span class="function">(<span class="params">err,data</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="title function_">resolve</span>(data);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">p.<span class="title function_">then</span>(<span class="function"><span class="params">value</span>=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">    fs.<span class="title function_">readFile</span>(<span class="string">&#x27;./resource/静夜思.md&#x27;</span>,<span class="function">(<span class="params">err,data</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="title function_">resolve</span>([value,data]);</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">value</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">        fs.<span class="title function_">readFile</span>(<span class="string">&#x27;./resource/咏鹅.md&#x27;</span>,<span class="function">(<span class="params">err,data</span>)=&gt;</span>&#123;</span><br><span class="line">            value.<span class="title function_">push</span>(data);</span><br><span class="line">            <span class="title function_">resolve</span>(value);</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">value</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(value.<span class="title function_">join</span>(<span class="string">&#x27;\r\n&#x27;</span>));</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Promise对象catch方法"><a href="#Promise对象catch方法" class="headerlink" title="Promise对象catch方法"></a>Promise对象catch方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Promise catch<span class="tag">&lt;/<span class="name">title</span>&gt;</span>    </span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">const</span> p=<span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                    <span class="title function_">reject</span>(<span class="string">&quot;出错了&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                &#125;,<span class="number">1000</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            p.<span class="title function_">catch</span>(<span class="function"><span class="params">reason</span>=&gt;</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">console</span>.<span class="title function_">error</span>(reason);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// 不用catch 用then也完全可以的</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// p.then(value=&gt;&#123;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// console.log(value);</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// &#125;,reason=&gt;&#123;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">//  console.error(reason);</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// &#125;);</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="Map的介绍与API"><a href="#Map的介绍与API" class="headerlink" title="Map的介绍与API"></a>Map的介绍与API</h3><p><strong><code>Map</code></strong> 对象保存键值对，并且能够记住键的原始插入顺序。任何值（对象或者基本类型）都可以作为一个键或一个值。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Set集合实践<span class="tag">&lt;/<span class="name">title</span>&gt;</span>    </span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// 声明Map</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">let</span> m=<span class="keyword">new</span> <span class="title class_">Map</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// 添加元素</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            m.<span class="title function_">set</span>(<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;小南湖&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            m.<span class="title function_">set</span>(<span class="string">&#x27;change&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;美丽的风景!&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">let</span> key=&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="attr">school</span>:<span class="string">&#x27;SCHOOL&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            m.<span class="title function_">set</span>(key,[<span class="string">&#x27;北京&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>]);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// size</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// 删除</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            m.<span class="title function_">delete</span>(<span class="string">&#x27;name&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// 获取</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            m.<span class="title function_">get</span>(key);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// 清空</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            m.<span class="title function_">clear</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// 遍历</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">for</span>(<span class="keyword">let</span> v <span class="keyword">of</span> m)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">console</span>.<span class="title function_">log</span>(v);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="模块化"><a href="#模块化" class="headerlink" title="模块化"></a>模块化</h3><p>   模块化是指将一个大的程序文件，拆分成许多小的文件，然后将小文件组合起来。</p><p> <strong>export命令用于规定模块的对外接口</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在t1.js这个文件下</span></span><br><span class="line"><span class="comment">//多行暴露</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">let</span> name=<span class="string">&#x27;望子成龙小学&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">let</span> teach=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;teaching&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在t2.js这个文件下</span></span><br><span class="line"><span class="comment">// 统一暴露</span></span><br><span class="line"><span class="keyword">let</span> name=<span class="string">&#x27;望子成龙小学&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> teach=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;teaching&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span>&#123;name,teach&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在t3.js这个文件下</span></span><br><span class="line"><span class="comment">// 默认暴露</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">    <span class="attr">school</span>:<span class="string">&#x27;KAVEN&#x27;</span>,</span><br><span class="line">    <span class="attr">sing</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;sing a song&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> import命令用于输入其他模块提供的功能</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>模块化<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">   </span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;module&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 1.通用的导入方式</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">import</span> * <span class="keyword">as</span> m1 <span class="keyword">from</span> <span class="string">&quot;./js/t1.js&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">console</span>.<span class="title function_">log</span>(m1);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">import</span> * <span class="keyword">as</span> m2 <span class="keyword">from</span> <span class="string">&quot;./js/t2.js&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">console</span>.<span class="title function_">log</span>(m2);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">import</span> * <span class="keyword">as</span> m3 <span class="keyword">from</span> <span class="string">&quot;./js/t3.js&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">console</span>.<span class="title function_">log</span>(m3);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 2.解构赋值形式</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">import</span> &#123; school <span class="keyword">as</span> highschool, teach &#125; <span class="keyword">from</span> <span class="string">&quot;./js/t1.js&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">import</span> &#123; <span class="keyword">default</span> <span class="keyword">as</span> m3 &#125; <span class="keyword">from</span> <span class="string">&quot;./js/t3.js&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">//   3.简便形式 针对默认暴露</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">import</span> m3 <span class="keyword">from</span> <span class="string">&quot;./js/t3.js&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端知识点 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>es6</title>
      <link href="/2023/01/01/es6/"/>
      <url>/2023/01/01/es6/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="数组的解构"><a href="#数组的解构" class="headerlink" title="数组的解构"></a>数组的解构</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> [item1,item2,item3]=names</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>let const 使用</code></pre><p>const不可修改   let const 不能重复</p><h2 id="let-const-作用域"><a href="#let-const-作用域" class="headerlink" title="let const 作用域"></a>let const 作用域</h2><p>let没有作用域提升</p><h2 id="块级作用域"><a href="#块级作用域" class="headerlink" title="块级作用域"></a>块级作用域</h2><p>对var</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">展开运算符...</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span>[itema,...newNames]=names</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(itema,newNames)</span><br></pre></td></tr></table></figure><h2 id="字符串拼接"><a href="#字符串拼接" class="headerlink" title="字符串拼接"></a>字符串拼接</h2><p>模板字符串</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> message=<span class="string">`my name is <span class="subst">$&#123;&#125;</span>,age is<span class="subst">$&#123;&#125;</span>`</span></span><br></pre></td></tr></table></figure><p> 函数默认值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">       <span class="keyword">function</span> <span class="title function_">printInfol</span>(<span class="params">&#123;</span></span><br><span class="line"><span class="params">           name = <span class="string">&quot;eg&quot;</span>, age = (<span class="number">12</span>)&#125; = &#123;&#125;</span>) &#123;</span><br><span class="line">           <span class="variable language_">console</span>.<span class="title function_">log</span>(name, age);</span><br><span class="line">       &#125;</span><br><span class="line">   &lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="函数的剩余参数"><a href="#函数的剩余参数" class="headerlink" title="函数的剩余参数"></a>函数的剩余参数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">       <span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params">m, n, ...args</span>) &#123;</span><br><span class="line">           <span class="variable language_">console</span>.<span class="title function_">log</span>(m, n);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="title function_">foo</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, )</span><br><span class="line">   &lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="箭头函数的补充"><a href="#箭头函数的补充" class="headerlink" title="箭头函数的补充"></a>箭头函数的补充</h2><p>无显式原型</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">        <span class="keyword">var</span> <span class="title function_">bar</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="展开语法"><a href="#展开语法" class="headerlink" title="展开语法"></a>展开语法</h2><p>在函数调用将数组表达式或者string在语法上补充</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">       <span class="keyword">const</span> names = [<span class="string">&quot;ab&quot;</span>, <span class="string">&quot;asd&quot;</span>, <span class="string">&quot;swd&quot;</span>]</span><br><span class="line">       <span class="keyword">const</span> name = <span class="string">&quot;sd&quot;</span></span><br><span class="line"></span><br><span class="line">       <span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params">x, y, z</span>) &#123;</span><br><span class="line">           <span class="variable language_">console</span>.<span class="title function_">log</span>(x, y, z);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="title function_">foo</span>(...names)</span><br><span class="line">   &lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> names = [<span class="string">&quot;ab&quot;</span>, <span class="string">&quot;asd&quot;</span>, <span class="string">&quot;swd&quot;</span>]</span><br><span class="line">      <span class="keyword">const</span> name = <span class="string">&quot;sdrfwe&quot;</span></span><br><span class="line">      <span class="keyword">const</span> newNames = [...names, ...name]</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(newNames);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="linespan><br></pre></td></tr></table></figure><h2 id="数值的表示方式"><a href="#数值的表示方式" class="headerlink" title="数值的表示方式"></a>数值的表示方式</h2><p><strong>新增symbol的使用</strong></p><h3 id="创建set结构"><a href="#创建set结构" class="headerlink" title="创建set结构"></a>创建set结构</h3><p>Set 属性</p><h2 id="新篇章"><a href="#新篇章" class="headerlink" title="新篇章"></a>新篇章</h2><h6 id="1-let"><a href="#1-let" class="headerlink" title="1.let"></a>1.let</h6><h6 id="2-const"><a href="#2-const" class="headerlink" title="2.const"></a>2.const</h6><h6 id="3-变量结构赋值"><a href="#3-变量结构赋值" class="headerlink" title="3.变量结构赋值"></a>3.变量结构赋值</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> zhoa = &#123;</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;中&#x27;</span>,</span><br><span class="line">          <span class="attr">age</span>: <span class="string">&#x27;43&#x27;</span>,</span><br><span class="line">          <span class="attr">xiaoping</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">              <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;伟大的&quot;</span>);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">let</span> &#123;</span><br><span class="line">          name,</span><br><span class="line">          age,</span><br><span class="line">          xiaoping</span><br><span class="line">      &#125; = zhoa;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(name);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(age);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(xiaoping);</span><br></pre></td></tr></table></figure><h6 id="4-模板字符串"><a href="#4-模板字符串" class="headerlink" title="4.模板字符串"></a>4.模板字符串</h6><p>可以自动换行</p><p>变量拼接</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="string">&#x27;de&#x27;</span>;</span><br><span class="line">     <span class="keyword">let</span> s = <span class="string">`<span class="subst">$&#123;a&#125;</span>fr`</span>;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(s);</span><br></pre></td></tr></table></figure><h6 id="5-对象简化"><a href="#5-对象简化" class="headerlink" title="5.对象简化"></a>5.对象简化</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> name = <span class="string">&#x27;sda&#x27;</span>;</span><br><span class="line">       <span class="keyword">let</span> change = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">           <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;的&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">const</span> school = &#123;</span><br><span class="line">           name,</span><br><span class="line">           change,</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(school);</span><br></pre></td></tr></table></figure><h6 id="6-箭头函数"><a href="#6-箭头函数" class="headerlink" title="6.箭头函数"></a>6.箭头函数</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">fn</span> = (<span class="params">a, b</span>) =&gt; &#123;</span><br><span class="line">          <span class="keyword">return</span> a + b;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">let</span> re = <span class="title function_">fn</span>(<span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(re);</span><br></pre></td></tr></table></figure><p>不能作为构造函数实例化</p><p>不能使用arguments</p><p>可以简写 1.省略小括号2.花括号省略 return也必须省略</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// let ad = document.getElementById(&#x27;ad&#x27;);</span><br><span class="line">           // ad.addEventListener(&quot;click&quot;, function() &#123;</span><br><span class="line">           //     let _this = this;</span><br><span class="line">           //     setTimeout(() =&gt; &#123;</span><br><span class="line">           //         _this.style.background = &#x27;pink&#x27;;</span><br><span class="line">           //     &#125;, 2000);</span><br><span class="line">           // &#125;);</span><br></pre></td></tr></table></figure><h6 id="7-参数默认值"><a href="#7-参数默认值" class="headerlink" title="7.参数默认值"></a>7.参数默认值</h6><h6 id="8-rest参数"><a href="#8-rest参数" class="headerlink" title="8.rest参数"></a>8.rest参数</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">date</span>(<span class="params">...args</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(args);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">date</span>(<span class="string">&#x27;爱吃&#x27;</span>, <span class="string">&#x27;人&#x27;</span>)</span><br></pre></td></tr></table></figure><p>rest参数必须放在最后</p><h6 id="8-扩展运算符"><a href="#8-扩展运算符" class="headerlink" title="8.扩展运算符"></a>8.扩展运算符</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> tg = [<span class="string">&#x27;参数&#x27;</span>, <span class="string">&#x27;得分&#x27;</span>];</span><br><span class="line"></span><br><span class="line">       <span class="keyword">function</span> <span class="title function_">chu</span>(<span class="params"></span>) &#123;</span><br><span class="line">           <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">arguments</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="title function_">chu</span>(...tg);</span><br></pre></td></tr></table></figure><p>作用：数组合并</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> tg = [<span class="string">&#x27;参数&#x27;</span>, <span class="string">&#x27;得分&#x27;</span>];</span><br><span class="line">      <span class="keyword">const</span> f = [<span class="string">&#x27;动物&#x27;</span>];</span><br><span class="line">      <span class="keyword">const</span> e = tg.<span class="title function_">concat</span>(f)</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(e);</span><br></pre></td></tr></table></figure><p>数组克隆</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> sa=[<span class="string">&#x27;d&#x27;</span>]</span><br><span class="line"><span class="keyword">const</span> saw=[...sa]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(saw)</span><br></pre></td></tr></table></figure><p>将伪数组变为真的数组</p><h6 id="9-symbol的基本使用"><a href="#9-symbol的基本使用" class="headerlink" title="9.symbol的基本使用"></a>9.symbol的基本使用</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> s1 = <span class="title class_">Symbol</span>()</span><br><span class="line">      <span class="keyword">const</span> s2 = <span class="title class_">Symbol</span>(<span class="string">&quot;cba&quot;</span>)</span><br><span class="line">    </span><br><span class="line">      <span class="keyword">const</span> obj = &#123;&#125;</span><br><span class="line">      <span class="comment">//写法一： 属性名赋值</span></span><br><span class="line">      obj[s1] = <span class="string">&quot;abc&quot;</span></span><br><span class="line">      obj[s2] = <span class="string">&quot;cba&quot;</span></span><br><span class="line"> </span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(obj[s1]);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(obj[s2]);</span><br><span class="line"> </span><br><span class="line">      <span class="comment">// 写法二： Object.defineProperty</span></span><br><span class="line">      <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(obj, s1, &#123;</span><br><span class="line">        <span class="attr">enumerable</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">configurable</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">writable</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">value</span>: <span class="string">&quot;abc&quot;</span></span><br><span class="line">      &#125;)</span><br><span class="line"> </span><br><span class="line">      <span class="comment">// 写法三： 定义字面量是直接使用</span></span><br><span class="line">      <span class="keyword">const</span> info =&#123;</span><br><span class="line">        [s1]: <span class="string">&quot;abc&quot;</span>,</span><br><span class="line">        [s2]: <span class="string">&quot;cba&quot;</span></span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><p>如果我们想要创建一个值相同的Symbol值怎么做</p><ul><li>我们可以使用Symbol.for方法来做到这一点；</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">          <span class="keyword">static</span>[<span class="title class_">Symbol</span>.<span class="property">hasInstance</span>]() &#123;</span><br><span class="line">              <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;是多少&quot;</span>);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">let</span> o = &#123;&#125;;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(o <span class="keyword">instanceof</span> <span class="title class_">Person</span>);</span><br></pre></td></tr></table></figure><h6 id="10-symbol-的内置值"><a href="#10-symbol-的内置值" class="headerlink" title="10.symbol 的内置值"></a>10.symbol 的内置值</h6><h6 id="11-迭代器"><a href="#11-迭代器" class="headerlink" title="11.迭代器"></a>11.迭代器</h6><p>迭代器是一种接口 创造了一种便利for of接口</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> xi = [<span class="string">&#x27;fs&#x27;</span>, <span class="string">&#x27;dew&#x27;</span>];</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> a <span class="keyword">of</span> xi) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(xi);</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><p>工作原理：</p><p>创建一个指针对象，指向当前数据的起始位置</p><p>第一次调用对象的next的方法，指针自动指向数据结构的第一个成员</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> xi = [<span class="string">&#x27;fs&#x27;</span>, <span class="string">&#x27;dew&#x27;</span>];</span><br><span class="line">       <span class="keyword">let</span> iterator = xi[<span class="title class_">Symbol</span>.<span class="property">iterator</span>]();</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(iterator.<span class="title function_">next</span>());</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(iterator.<span class="title function_">next</span>());</span><br></pre></td></tr></table></figure><p>运用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> ban = &#123;</span><br><span class="line">           <span class="attr">name</span>: <span class="string">&quot;是的哇&quot;</span>,</span><br><span class="line">           <span class="attr">stus</span>: [</span><br><span class="line">               <span class="string">&#x27;c&#x27;</span>,</span><br><span class="line">               <span class="string">&#x27;w&#x27;</span>,</span><br><span class="line">               <span class="string">&#x27;wd&#x27;</span></span><br><span class="line">           ],</span><br><span class="line">           [<span class="title class_">Symbol</span>.<span class="property">iterator</span>]() &#123;</span><br><span class="line">               <span class="keyword">let</span> index = <span class="number">0</span>;</span><br><span class="line">               let_this = <span class="variable language_">this</span>;</span><br><span class="line">               <span class="keyword">return</span> &#123;</span><br><span class="line">                   <span class="attr">next</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                       <span class="keyword">if</span> (index &lt; _this.<span class="property">stus</span>.<span class="property">length</span>) &#123;</span><br><span class="line">                           <span class="keyword">const</span> result = &#123;</span><br><span class="line">                               <span class="attr">value</span>: _this.<span class="property">stus</span>[index],</span><br><span class="line">                               <span class="attr">done</span>: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">                           &#125;;</span><br><span class="line">                           index++;</span><br><span class="line">                           <span class="keyword">return</span> result;</span><br><span class="line">                       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                           <span class="keyword">return</span> &#123;</span><br><span class="line">                               <span class="attr">value</span>: <span class="literal">undefined</span>,</span><br><span class="line">                               <span class="attr">done</span>: <span class="literal">true</span></span><br><span class="line">                           &#125;;</span><br><span class="line">                       &#125;</span><br><span class="line">                       <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> ban) &#123;</span><br><span class="line"></span><br><span class="line">                           <span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line">                       &#125;</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h6 id="12-生成器"><a href="#12-生成器" class="headerlink" title="12.生成器"></a>12.生成器</h6><p>特殊函数 异步编程 纯回调函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span>* <span class="title function_">gen</span>(<span class="params"></span>) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;hello &quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">let</span> iterator = <span class="title function_">gen</span>();</span><br><span class="line">      iterator.<span class="title function_">next</span>();</span><br></pre></td></tr></table></figure><p>必须要next</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span>* <span class="title function_">gen</span>(<span class="params"></span>) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">222</span>);</span><br><span class="line">          <span class="keyword">yield</span> <span class="string">&#x27;打黑&#x27;</span>;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">234</span>);</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">let</span> iterator = <span class="title function_">gen</span>();</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(iterator.<span class="title function_">next</span>());</span><br></pre></td></tr></table></figure><p>生成器函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">one</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">111</span>);</span><br><span class="line">            iterator.<span class="title function_">next</span>();</span><br><span class="line">        &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">two</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">222</span>);</span><br><span class="line">            iterator.<span class="title function_">next</span>();</span><br><span class="line">        &#125;, <span class="number">2000</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">three</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">333</span>);</span><br><span class="line">            iterator.<span class="title function_">next</span>();</span><br><span class="line">        &#125;, <span class="number">3000</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span>* <span class="title function_">gen</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">yield</span> <span class="title function_">one</span>();</span><br><span class="line">            <span class="keyword">yield</span> <span class="title function_">two</span>();</span><br><span class="line">            <span class="keyword">yield</span> <span class="title function_">three</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getUsers</span>(<span class="params"></span>) &#123;</span><br><span class="line">          <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">              <span class="keyword">let</span> data = <span class="string">&#x27;附件二&#x27;</span>;</span><br><span class="line">              iterator.<span class="title function_">next</span>(data);</span><br><span class="line">          &#125;, <span class="number">1000</span>)</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">function</span> <span class="title function_">getOrders</span>(<span class="params"></span>) &#123;</span><br><span class="line">          <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">              <span class="keyword">let</span> data = <span class="string">&#x27;附件二fs&#x27;</span>;</span><br><span class="line">          &#125;, <span class="number">1000</span>)</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">function</span> <span class="title function_">getGoods</span>(<span class="params"></span>) &#123;</span><br><span class="line">          <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">              <span class="keyword">let</span> data = <span class="string">&#x27;附件二fewffwe&#x27;</span>;</span><br><span class="line">          &#125;, <span class="number">1000</span>)</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="keyword">function</span>* <span class="title function_">gen</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">yield</span> getGoods;</span><br><span class="line">              <span class="keyword">yield</span> getOrders;</span><br><span class="line">              <span class="keyword">let</span> users = <span class="keyword">yield</span> getUsers;</span><br><span class="line">              <span class="variable language_">console</span>.<span class="title function_">log</span>(users);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="comment">//调用生成器函数</span></span><br><span class="line">      <span class="keyword">let</span> iterator = <span class="title function_">gen</span>();</span><br><span class="line">      iterator.<span class="title function_">next</span>();</span><br></pre></td></tr></table></figure><h6 id="13-promise"><a href="#13-promise" class="headerlink" title="13.promise"></a>13.promise</h6><p>语法上promise是一个构造函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创造实例  </span></span><br><span class="line"><span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span>(<span class="params">resolve, reject</span>) &#123;</span><br><span class="line">            <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">let</span> data = <span class="string">&#x27;数据&#x27;</span>;</span><br><span class="line">                <span class="title function_">resolve</span>(data);</span><br><span class="line">            &#125;, <span class="number">1000</span>)</span><br><span class="line">        &#125;);</span><br><span class="line">        p.<span class="title function_">then</span>(<span class="keyword">function</span>(<span class="params">value</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(value);</span><br><span class="line">        &#125;, <span class="keyword">function</span>(<span class="params">reson</span>) &#123;</span><br><span class="line"></span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure><p>promise读取文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"> <span class="comment">//调用方法读取文件</span></span><br><span class="line"> fs.<span class="title function_">readFile</span>(<span class="string">&#x27;./新建文本文档.md&#x27;</span>, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">     <span class="keyword">if</span> (err) <span class="keyword">throw</span> err;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(data.<span class="title function_">toString</span>());</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"> <span class="comment">//使用p</span></span><br><span class="line"> <span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span>(<span class="params">resolve, reject</span>) &#123;</span><br><span class="line">     fs.<span class="title function_">readFile</span>(<span class="string">&quot;./r.js&quot;</span>, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">         <span class="keyword">if</span> (err) <span class="title function_">reject</span>(err);</span><br><span class="line">         <span class="title function_">resolve</span>(data);</span><br><span class="line">     &#125;)</span><br><span class="line"> &#125;);</span><br><span class="line"> p.<span class="title function_">then</span>(<span class="keyword">function</span>(<span class="params">value</span>) &#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(value.<span class="title function_">toString</span>());</span><br><span class="line"> &#125;, <span class="keyword">function</span>(<span class="params">reason</span>) &#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;失败&quot;</span>);</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure><h6 id="14-class类"><a href="#14-class类" class="headerlink" title="14.class类"></a>14.class类</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Shouji</span> &#123;</span><br><span class="line">           <span class="comment">//构造方法</span></span><br><span class="line">           <span class="title function_">constructor</span>(<span class="params">brand, price</span>) &#123;</span><br><span class="line">               <span class="variable language_">this</span>.<span class="property">brand</span> = brand;</span><br><span class="line">               <span class="variable language_">this</span>.<span class="property">price</span> = price;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="title function_">call</span>(<span class="params"></span>) &#123;</span><br><span class="line">               <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;我可以打电话&quot;</span>);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">let</span> onePlus = <span class="keyword">new</span> <span class="title class_">Shouji</span>(<span class="string">&quot;1+&quot;</span>, <span class="number">1999</span>);</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(onePlus);</span><br></pre></td></tr></table></figure><h5 id="15-类的静态成员"><a href="#15-类的静态成员" class="headerlink" title="15.类的静态成员"></a>15.类的静态成员</h5><h6 id="16-构造函数继承"><a href="#16-构造函数继承" class="headerlink" title="16.构造函数继承"></a>16.构造函数继承</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Phone</span>(<span class="params">brand, price</span>) &#123;</span><br><span class="line">           <span class="variable language_">this</span>.<span class="property">brand</span> = brand;</span><br><span class="line">           <span class="variable language_">this</span>.<span class="property">price</span> = price;</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line">       <span class="title class_">Phone</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">call</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">           <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;我可以打电话&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">function</span> <span class="title function_">SmartPhone</span>(<span class="params">brand, price, color, size</span>) &#123;</span><br><span class="line">           <span class="title class_">Phone</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>, brand, price);</span><br><span class="line">           his.<span class="property">color</span> = color;</span><br><span class="line">           <span class="variable language_">this</span>.<span class="property">size</span> = size;</span><br><span class="line">           <span class="comment">//设置子机构造函数原型</span></span><br><span class="line">           <span class="title class_">SmartPhone</span>.<span class="property"><span class="keyword">prototype</span></span> = <span class="keyword">new</span> <span class="title class_">Phone</span>;</span><br><span class="line">           <span class="title class_">SmartPhone</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">constructor</span> = <span class="title class_">SmartPhone</span>;</span><br><span class="line">           <span class="comment">//声明子类的方法</span></span><br><span class="line">           <span class="title class_">SmartPhone</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">photo</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">               <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;我可以拍照&quot;</span>);</span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">const</span> chuzi = <span class="keyword">new</span> <span class="title class_">SmartPhone</span>(<span class="string">&#x27;锤子&#x27;</span>, <span class="number">213</span>, <span class="string">&#x27;黑色&#x27;</span>, <span class="string">&#x27;5.5inch&#x27;</span>)</span><br><span class="line">           <span class="variable language_">console</span>.<span class="title function_">log</span>(chuzi);</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Phone</span> &#123;</span><br><span class="line">            <span class="title function_">constructor</span>(<span class="params">brand, price</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">brand</span> = brand;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">price</span> = price;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="title function_">call</span>(<span class="params"></span>) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;我可以打电话&quot;</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">class</span> <span class="title class_">SmartPhone</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Phone</span> &#123;</span><br><span class="line">            <span class="title function_">constructor</span>(<span class="params">brand, price, color, size</span>) &#123;</span><br><span class="line">                <span class="variable language_">super</span>(brand, price);</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">color</span> = color;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">size</span> = size;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="title function_">photo</span>(<span class="params"></span>) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;拍照&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="title function_">play</span>(<span class="params"></span>) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;玩&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">const</span> xiaomi = <span class="keyword">new</span> <span class="title class_">SmartPhone</span>(<span class="string">&#x27;小米&#x27;</span>, <span class="number">799</span>, <span class="string">&#x27;黑色&#x27;</span>, <span class="string">&#x27;4.5&#x27;</span>);</span><br><span class="line">        xiaomi.<span class="title function_">photo</span>();</span><br><span class="line">        xiaomi.<span class="title function_">play</span>();</span><br></pre></td></tr></table></figure><h5 id="17-getter-setter"><a href="#17-getter-setter" class="headerlink" title="17.getter setter"></a>17.getter setter</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Phone</span> &#123;</span><br><span class="line">           <span class="keyword">get</span> <span class="title function_">price</span>() &#123;</span><br><span class="line">               <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;价格&quot;</span>);</span><br><span class="line">               <span class="keyword">return</span> <span class="string">&#x27;i&#x27;</span></span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">set</span> <span class="title function_">price</span>(<span class="params">newVal</span>) &#123;</span><br><span class="line">               <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;技术&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">//实例化</span></span><br><span class="line">       <span class="keyword">let</span> s = <span class="keyword">new</span> <span class="title class_">Phone</span>();</span><br><span class="line">       s.<span class="property">price</span> = <span class="string">&#x27;free&#x27;</span>;</span><br></pre></td></tr></table></figure><h6 id="18-数值扩展"><a href="#18-数值扩展" class="headerlink" title="18.数值扩展"></a>18.数值扩展</h6><p>Number.isNaN()</p><p>Number.parseInt()</p><p>Number.isInterger()</p><p>math.trunc()抹掉小数</p><p>Math.sign()判断正数</p><p>Object.is(12,3)判断是否相等</p><p>Object.assign对象的合并</p><h6 id="19-模块化"><a href="#19-模块化" class="headerlink" title="19.模块化"></a>19.模块化</h6><p>1）防止命名重复</p><p>2）代码复用</p><p>3）高维护性</p><p>20.includes</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">const mi = [&#x27;的&#x27;, &#x27;as&#x27;];</span><br><span class="line">       console.log(mi.includes(&#x27;as&#x27;));&quot;&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端知识点 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>vue总结</title>
      <link href="/2022/12/29/2022-12-29vue%E6%80%BB%E7%BB%93/"/>
      <url>/2022/12/29/2022-12-29vue%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<hr><h6 id="1-hello小案例"><a href="#1-hello小案例" class="headerlink" title="1.hello小案例"></a>1.hello小案例</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">body&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello,&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">//阻止vue在启动时产生提示</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> x = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">el</span>: <span class="string">&#x27;#root&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">data</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="attr">name</span>: <span class="string">&#x27;尚硅谷&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h6 id="2-模板语法"><a href="#2-模板语法" class="headerlink" title="2.模板语法"></a>2.模板语法</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;url&quot;</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">//阻止vue在启动时产生提示</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> x = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">el</span>: <span class="string">&#x27;#root&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">data</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="attr">name</span>: <span class="string">&#x27;尚硅谷&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="attr">address</span>: <span class="string">&#x27;北京&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="attr">url</span>: <span class="string">&#x27;www.baidu.com&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h6 id="3-数据绑定"><a href="#3-数据绑定" class="headerlink" title="3.数据绑定"></a>3.数据绑定</h6><p>v-model  双向绑定</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        双向绑定 &lt;input type=&quot;text&quot; v-model=&quot;name&quot;&gt; &lt;br&gt; 单项绑定</span><br><span class="line">        &lt;input type=&quot;text&quot; :value=&quot;name&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        Vue.config.productionTip = false</span><br><span class="line">            //阻止vue在启动时产生提示</span><br><span class="line">        const vm = new Vue(&#123;</span><br><span class="line">            el: &#x27;#root&#x27;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                name: &#x27;尚硅谷&#x27;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>v-model一般应用表单   v-model:value可以简写为 v-model</p><h6 id="4-数据代理"><a href="#4-数据代理" class="headerlink" title="4.数据代理"></a>4.数据代理</h6><p>通过vm对象代理data对象中属性的操作</p><h6 id="5-事件处理"><a href="#5-事件处理" class="headerlink" title="5.事件处理"></a>5.事件处理</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;show&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">//阻止vue在启动时产生提示</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">el</span>: <span class="string">&#x27;#root&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">data</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="attr">name</span>: <span class="string">&#x27;尚硅谷&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="attr">address</span>: <span class="string">&#x27;北京&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="title function_">show</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                    <span class="title function_">alert</span>(<span class="string">&quot;nihao&quot;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h6 id="6-键盘事件"><a href="#6-键盘事件" class="headerlink" title="6.键盘事件"></a>6.键盘事件</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;按下回车输入&quot;</span> @<span class="attr">keyup.enter</span>=<span class="string">&quot;show&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">//阻止vue在启动时产生提示</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">el</span>: <span class="string">&#x27;#root&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">data</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="attr">name</span>: <span class="string">&#x27;尚硅谷&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="attr">address</span>: <span class="string">&#x27;北京&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="title function_">show</span>(<span class="params">e</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">target</span>.<span class="property">value</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h6 id="7-条件渲染"><a href="#7-条件渲染" class="headerlink" title="7.条件渲染"></a>7.条件渲染</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">body&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前的值是&#123;&#123;n&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;n++&quot;</span>&gt;</span>点我加1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-show</span>=<span class="string">&quot;n===2&quot;</span>&gt;</span>是<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">//阻止vue在启动时产生提示</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">el</span>: <span class="string">&#x27;#root&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">data</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="attr">name</span>: <span class="string">&#x27;尚硅谷&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="attr">n</span>: <span class="number">0</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h6 id="8-列表渲染"><a href="#8-列表渲染" class="headerlink" title="8.列表渲染"></a>8.列表渲染</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;script type=&quot;text/javascript&quot; src=&quot;../js/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">    ul li &#123;</span><br><span class="line">        list-style: none;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;h2&gt;人员列表&lt;/h2&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot;(p,index) in person&quot; :key=&quot;index&quot;&gt; &#123;&#123;p.name&#125;&#125;--&#123;&#123;p.age&#125;&#125;&lt;/li&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        Vue.config.productionTip = false</span><br><span class="line">            //阻止vue在启动时产生提示</span><br><span class="line">        const vm = new Vue(&#123;</span><br><span class="line">            el: &#x27;#root&#x27;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                person: [&#123;</span><br><span class="line">                    id: &#x27;001&#x27;,</span><br><span class="line">                    name: &#x27;中国&#x27;,</span><br><span class="line">                    age: 43</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    id: &#x27;002&#x27;,</span><br><span class="line">                    name: &#x27;中&#x27;,</span><br><span class="line">                    age: 43</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    id: &#x27;003&#x27;,</span><br><span class="line">                    name: &#x27;单位&#x27;,</span><br><span class="line">                    age: 44</span><br><span class="line">                &#125;, ]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端知识点 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>前端错题总结</title>
      <link href="/2022/12/27/2022-12-27%E5%89%8D%E7%AB%AF%E9%A2%98%E9%94%99%E9%A2%98%E6%80%BB%E7%BB%93/"/>
      <url>/2022/12/27/2022-12-27%E5%89%8D%E7%AB%AF%E9%A2%98%E9%94%99%E9%A2%98%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<hr><h3 id="1-行内块元素"><a href="#1-行内块元素" class="headerlink" title="1.行内块元素"></a>1.行内块元素</h3><p>span a strong em del ins img</p><h3 id="2-组合标题元素"><a href="#2-组合标题元素" class="headerlink" title="2.组合标题元素"></a>2.组合标题元素</h3><p>hgroup</p><h3 id="3-元素不可见"><a href="#3-元素不可见" class="headerlink" title="3.元素不可见"></a>3.元素不可见</h3><p>display:none</p>]]></content>
      
      
      <categories>
          
          <category> 前端知识点 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
